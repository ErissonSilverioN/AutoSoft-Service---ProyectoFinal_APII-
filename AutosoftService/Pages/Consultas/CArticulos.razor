@page "/CArticulos"

@using AutosoftService.Model;
@using AutosoftService.BLL;
@using AutosoftService.DAL;


<EditForm Model="Lista">

    <div class="card">


        <div class="card-header">
            <div class="text-center">
                <h3>Consulta de Entrada</h3>
            </div>
        </div>


        <div class="card-body">

            <form>

                <br />


                <div class="form-row">

                    <div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />

                    <div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
                        <label for="Filtro" class="LabelConsulta     col-sm-3     col-md-2">Filtro: </label>
                        <select class="form-control     col-sm-8     col-md-9" @bind="Filtro">
                            <option value="0">Todo</option>
                            <option value="1">Codigo</option>
                            <option value="2">Proveedor</option>
                            <option value="3">Precio</option>
                        </select>
                    </div>



                    <div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
                        <label for="Criterio" class="LabelConsulta     col-sm-3      col-md-2">Criterio: </label>
                        <InputText @bind-Value="@Criterio" class="form-control     col-sm-8     col-md-9" placeholder="Criterio" />
                        <p class="validation-message"> @Mensaje </p>
                    </div>

                    <div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />

                    <br />

                    <div class="DivConsulta text-center     col-12">
                        <input class="ml-1" type="checkbox" @bind-value="BuscarPorFecha" style="margin-top:15px">&nbsp;&nbsp;Filtrar por Fecha
                    </div>

                    <div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />



                    <div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
                        <label for="Desde" class="LabelConsulta     col-sm-3     col-md-2">Desde: </label>
                        <InputDate @bind-Value="@Desde" class="form-control     col-sm-8     col-md-9" />
                    </div>


                    <div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
                        <label for="Hasta" class="LabelConsulta     col-sm-3     col-md-2">Hasta: </label>
                        <InputDate @bind-Value="@Hasta" class="form-control     col-sm-8     col-md-9" />
                    </div>


                    <div class="DivConsulta text-center     container     col-sm-12     col-md-12          col-lg-1     col-xl-1">
                        <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar</button>
                    </div>

                    <div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />




                    <table class="table" style="margin-top: 20px">
                        <thead class="thead-light">
                            <tr>
                                <th>Codigo</th>
                                <th>Descripcion</th>
                                <th>Fecha</th>
                                <th>Proveedor ID</th>
                                <th>Cantidad</th>
                                <th>Precio</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Paginado.Count == 0)
                            {
                                <tr>
                                    <th colspan="12" style="color:black; text-align: center">"No hay datos que mostrar"</th>
                                </tr>
                            }
                            else
                            {

                                @foreach (var item in Paginado)
                                {
                                    <tr>
                                        <th>@item.ArticuloId</th>
                                        <th>@item.Descripcion</th>
                                        <th>@item.Fecha.ToString("dd/MM/yyyy")</th>
                                        <th>@item.ProveedorId</th>
                                        <th>@item.Existencia</th>
                                        <th>@item.Precio</th>
                                        
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>


                </div>

            </form>



        </div>


        <div class="card-footer">
            <div class="form-row col-12 justify-content-center">
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        <li class="page-item">
                            <a class="page-link" @onclick="PaginaAnterior">
                                <span class="oi oi-media-skip-backward"></span>
                            </a>
                        </li>

                        @for (int i = 1; i <= Paginas; i++)
                        {
                            <li class="page-item disabled"><a class="page-link">@i</a></li>
                        }

                        <li class="page-item">
                            <a class="page-link" @onclick="PaginaSiguiente">
                                <span class="oi oi-media-skip-forward"></span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

    </div>

</EditForm>


@code {


    List<Articulos> Lista { get; set; }
    List<Articulos> Paginado { get; set; }

    string Filtro;
    string Criterio;
    DateTime Desde;
    DateTime Hasta;
    bool BuscarPorFecha;
    string Mensaje;

    public List<Articulos> ListadoArticulos = new List<Articulos>();
    Proveedores proveedores = new Proveedores();


    double Paginas = 0;
    double Elementos = 0;
    int PaginaActual = 0;


    Contexto db = new Contexto();
    Paginacion paginacion = new Paginacion();

    List<Articulos> ListaTemp = new List<Articulos>();


    protected override void OnInitialized()
    {
        Filtro = "0";
        Criterio = string.Empty;
        Desde = DateTime.Now;
        Hasta = DateTime.Now;
        BuscarPorFecha = false;
        Mensaje = string.Empty;
        CargarLista();
    }


    ArticuloBLL articuloBLL = new ArticuloBLL();
    private void CargarLista()
    {
        ListadoArticulos = ArticuloBLL.GetList(e => true);
        Lista = new List<Articulos>();
        foreach (var item in ListadoArticulos)
        {
            Articulos p = new Articulos();
            p.ArticuloId = item.ArticuloId;
            p.Descripcion = item.Descripcion;
            p.Fecha = item.Fecha;
            p.Categoria = item.Categoria;
            p.ProveedorId = item.ProveedorId;
            p.Precio = item.Precio;
            p.Existencia = item.Existencia;

            Lista.Add(p);
        }

        IniciarPaginacion();
    }


    public void IniciarPaginacion()
    {
        PaginaActual = 1;
        Elementos = Lista.Count();
        Paginas = Math.Ceiling(Elementos / paginacion.Mostrar);
        Paginado = Lista.Take(paginacion.Mostrar).ToList();
    }


    private void PaginaSiguiente()
    {
        if (PaginaActual < Paginas)
        {
            PaginaActual++;
            Paginado = Lista
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    private void PaginaAnterior()
    {
        if (PaginaActual > 1)
        {
            PaginaActual--;
            Paginado = Lista
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }


    public void FiltrarPorLaFecha()
    {
        if (Filtro == "0")
            ListaTemp = Lista;

        if (BuscarPorFecha == true && ListaTemp.Count > 0)
        {
            Lista = new List<Articulos>();
            foreach (var item in ListaTemp)
            {
                if (item.Fecha.Date >= Desde.Date && item.Fecha.Date <= Hasta.Date)
                {
                    Lista.Add(item);
                }
            }
            BuscarPorFecha = false;
        }
        else
        {
            Lista = new List<Articulos>();
            Lista = ListaTemp;
        }
        IniciarPaginacion();
    }



    private void Buscar()
    {
        if (Filtro == "0")
        {
            CargarLista();
            FiltrarPorLaFecha();
        }
        else
        {
            if (Criterio == "")
            {
                Mensaje = "Agregue el criterio de busqueda.";
            }
            else
            {
                CargarLista();
                List<Articulos> ListadoTemp = Lista;
                Mensaje = string.Empty;
                switch (Filtro)
                {
                    case "0":
                        ListadoArticulos = ArticuloBLL.GetList(e => true);
                        break;

                    case "1":
                        ListadoTemp = new List<Articulos>();
                        foreach (var item in ListadoArticulos)
                        {
                            if (Convert.ToString(item.ArticuloId).Contains(Criterio))
                            {
                                Articulos p = new Articulos();
                                p.ArticuloId = item.ArticuloId;
                                p.Descripcion = item.Descripcion;
                                p.Fecha = item.Fecha;
                                p.Categoria = item.Categoria;

                                p.ProveedorId = item.ProveedorId;
                                p.Precio = item.Precio;
                                p.Existencia = item.Existencia;

                                ListadoTemp.Add(p);
                            }
                        }
                        break;


                    case "2":
                        ListadoTemp = new List<Articulos>();
                        foreach (var item in ListadoArticulos)
                        {
                            if (item.Descripcion.Contains(Criterio))
                            {
                                Articulos p = new Articulos();
                                p.ArticuloId = item.ArticuloId;
                                p.Descripcion = item.Descripcion;
                                p.Fecha = item.Fecha;
                                p.Categoria = item.Categoria;

                                p.ProveedorId = item.ProveedorId;
                                p.Precio = item.Precio;
                                p.Existencia = item.Existencia;

                                ListadoTemp.Add(p);
                            }
                        }
                        break;

                        //    case "3":
                        //        ListadoTemp = new List<Articulos>();
                        //        foreach (var item in ListadoArticulos)
                        //        {
                        //            Articulos p = new Articulos();
                        //            p.ArticuloId = item.ArticuloId;
                        //            p.Descripcion = item.Descripcion;
                        //            p.Fecha = item.Fecha;
                        //            p.Categoria = item.Categoria;

                        //            p.ProveedorId = item.ProveedorId;
                        //            p.Precio = item.Precio;
                        //            p.Existencia = item.Existencia;

                        //            ListadoTemp.Add(p);
                        //        }
                        //}
                        //break;




                }
                if (BuscarPorFecha == true)
                {
                    Lista = new List<Articulos>();
                    foreach (var item in ListaTemp)
                    {
                        if (item.Fecha.Date >= Desde.Date && item.Fecha.Date <= Hasta.Date)
                        {
                            Lista.Add(item);
                        }
                    }
                    BuscarPorFecha = false;
                }
                else
                {
                    Lista = new List<Articulos>();
                    Lista = ListaTemp;
                }
            }
        }
    }



}

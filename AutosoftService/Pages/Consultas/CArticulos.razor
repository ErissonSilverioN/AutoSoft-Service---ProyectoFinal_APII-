@page "/CArticulos"

@using AutosoftService.Model;
@using AutosoftService.Model.Consultas
@using AutosoftService.BLL;
@using AutosoftService.DAL;

@inject IToastService toast


<EditForm Model="ListaArticulos">

    <div class="card">


        <div class="card-header">
            <div class="text-center">
                <h3>Consulta de Articulo</h3>
            </div>
        </div>


        <div class="card-body">

            <form>

                <br />


                <div class="form-row">

                    <div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />

                    <div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
                        <label for="Filtro" class="LabelConsulta     col-sm-3     col-md-2">Filtro: </label>
                        <select class="form-control     col-sm-8     col-md-9" @bind="Filtro">
                            <option value="0">Todo</option>
                            <option value="1">Codigo</option>
                            <option value="2">Descripcion</option>
                            <option value="3">Proveedor</option>
                            <option value="4">Existencia</option>
                            <option value="5">Costo</option>
                        </select>
                    </div>



                    <div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
                        <label for="Criterio" class="LabelConsulta     col-sm-3      col-md-2">Criterio: </label>
                        <InputText @bind-Value="@Criterio" class="form-control     col-sm-8     col-md-9" placeholder="Criterio" />
                    </div>

                    <div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />

                    <br />

                    <div class="DivConsulta text-center     col-12">
                        <input class="ml-1" type="checkbox" @bind-value="FiltrarFecha" style="margin-top:15px">&nbsp;&nbsp;Filtrar por Fecha
                    </div>

                    <div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />



                    <div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
                        <label for="Desde" class="LabelConsulta     col-sm-3     col-md-2">Desde: </label>
                        <InputDate @bind-Value="@Desde" class="form-control     col-sm-8     col-md-9" />
                    </div>


                    <div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
                        <label for="Hasta" class="LabelConsulta     col-sm-3     col-md-2">Hasta: </label>
                        <InputDate @bind-Value="@Hasta" class="form-control     col-sm-8     col-md-9" />
                    </div>


                    <div class="DivConsulta text-center     container     col-sm-12     col-md-12          col-lg-1     col-xl-1">
                        <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar</button>
                    </div>

                    <div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />




                    <table class="table" style="margin-top: 20px">
                        <thead class="thead-light">
                            <tr>
                                <th>Codigo</th>
                                <th>Descripcion</th>
                                <th>Fecha</th>
                                <th>Proveedor</th>
                                <th>Existencia</th>
                                <th>Costo</th>
                                <th>Valor Inventario</th>

                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ListadoPaginado.Count == 0)
                            {
                                <tr>
                                    <th colspan="12" style="color:black; text-align: center">"No hay datos que mostrar"</th>
                                </tr>
                            }
                            else
                            {

                                @foreach (var item in ListadoPaginado)
                                {
                                    <tr>
                                        <th>@item.ArticuloId</th>
                                        <th>@item.Descripcion</th>
                                        <th>@item.Fecha.ToString("dd/MM/yyyy")</th>
                                        <th>@item.Proveedor</th>
                                        <th>@item.Existencia</th>
                                        <th>@item.Costo.ToString("N2")</th>
                                        <th>@item.ValorInventario.ToString("N2")</th>



                                    </tr>
                                }
                            }
                        </tbody>
                    </table>


                </div>

                <br />

                <div class="form-inline justify-content-end">
                    <label>Total Valor Inventario:&nbsp;</label>
                    <input type="text"  step="0.01" name="amount" placeholder="0.00" @bind-value="@ValorInventario" class="form-control" disabled />
                    @*<InputNumber @bind-Value="@ValorInventario" class="form-control" disabled/>*@
                </div>

            </form>



        </div>


        <div class="card-footer">
            <div class="form-row col-12 justify-content-center">
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        <li class="page-item">
                            <a class="page-link" @onclick="PaginaAnterior">
                                <span class="oi oi-media-skip-backward"></span>
                            </a>
                        </li>

                        @for (int i = 1; i <= Paginas; i++)
                        {
                            <li class="page-item disabled"><a class="page-link">@i</a></li>
                        }

                        <li class="page-item">
                            <a class="page-link" @onclick="PaginaSiguiente">
                                <span class="oi oi-media-skip-forward"></span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

    </div>

</EditForm>


@code {


    DateTime Desde;
    DateTime Hasta;

    string ValorInventario;
    string Filtro;
    string Criterio;
    bool FiltrarFecha;


    Proveedores proveedorTemp = new Proveedores();


    public List<Articulos> listaArticulos = new List<Articulos>();

    List<ArticulosConsult> ListaArticulos { get; set; }
    List<ArticulosConsult> ListadoPaginado { get; set; }

    double Paginas = 0;
    double Elementos = 0;
    int PaginaActual = 0;

    Contexto db = new Contexto();
    Paginacion paginacion = new Paginacion();

    List<ArticulosConsult> listaTemp = new List<ArticulosConsult>();

    protected override void OnInitialized()
    {
        Filtro = "0";
        Criterio = string.Empty;
        Desde = DateTime.Now;
        Hasta = DateTime.Now;
        FiltrarFecha = false;
        LlenarLista();
    }



    private void LlenarLista()
    {
        listaArticulos = ArticuloBLL.GetList(e => true);

        ListaArticulos = new List<ArticulosConsult>();

        foreach (var item in listaArticulos)
        {
            ArticulosConsult articulos = new ArticulosConsult();
            articulos.ArticuloId = item.ArticuloId;
            articulos.Descripcion = item.Descripcion;
            articulos.Fecha = item.Fecha;
            proveedorTemp = ProveedorBLL.Buscar(item.ProveedorId);
            articulos.Proveedor = (proveedorTemp == null) ? "Proveedor Eliminado" : proveedorTemp.Nombre;
            articulos.Costo = item.Costo;
            articulos.Existencia = item.Existencia;
            articulos.ValorInventario = (articulos.Existencia * articulos.Costo);


            ListaArticulos.Add(articulos);
            TotalInventario();
        }

        IniciarPaginacion();
    }



    public void IniciarPaginacion()
    {
        PaginaActual = 1;
        Elementos = ListaArticulos.Count();
        Paginas = Math.Ceiling(Elementos / paginacion.Mostrar);
        ListadoPaginado = ListaArticulos.Take(paginacion.Mostrar).ToList();
    }

    private void PaginaSiguiente()
    {
        if (PaginaActual < Paginas)
        {
            PaginaActual++;
            ListadoPaginado = ListaArticulos
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    private void PaginaAnterior()
    {
        if (PaginaActual > 1)
        {
            PaginaActual--;
            ListadoPaginado = ListaArticulos
                .Skip((PaginaActual - 1) * paginacion.Mostrar)
                .Take(paginacion.Mostrar)
                .ToList();
        }
    }

    public void FiltrarPorLaFecha()
    {
        if (Filtro == "0")
            listaTemp = ListaArticulos;

        if (FiltrarFecha == true && listaTemp.Count > 0)
        {
            ListaArticulos = new List<ArticulosConsult>();
            foreach (var item in listaTemp)
            {
                if (item.Fecha.Date >= Desde.Date && item.Fecha.Date <= Hasta.Date)
                {
                    ListaArticulos.Add(item);
                }
            }

            FiltrarFecha = false;
        }
        else
        {
            ListaArticulos = new List<ArticulosConsult>();
            ListaArticulos = listaTemp;
            TotalInventario();
        }
        IniciarPaginacion();
    }



    private void TotalInventario()
    {
        decimal Total = 0;

        if (ListaArticulos != null)

            foreach(var item in ListaArticulos)
            {
                Total +=  item.ValorInventario;
            }

        ValorInventario = Convert.ToString(Total.ToString("N2"));


    }






    private void Buscar()
    {
        if (Filtro == "0")
        {
            LlenarLista();
            FiltrarPorLaFecha();
        }
        else
        {
            if (Criterio == "")
            {
                toast.ShowInfo("Ingrese un criterio de busqueda");
            }
            else
            {
                LlenarLista();
                List<ArticulosConsult> listaTemp = ListaArticulos;

                switch (Filtro)
                {
                    case "0":
                        listaArticulos = ArticuloBLL.GetList(e => true);
                        break;

                    case "1":
                        listaTemp = new List<ArticulosConsult>();
                        foreach (var item in listaArticulos)
                        {
                            if (Convert.ToString(item.ArticuloId).Contains(Criterio))
                            {
                                ArticulosConsult articulos = new ArticulosConsult();
                                articulos.ArticuloId = item.ArticuloId;
                                articulos.Descripcion = item.Descripcion;
                                articulos.Fecha = item.Fecha;
                                proveedorTemp = ProveedorBLL.Buscar(item.ProveedorId);
                                articulos.Proveedor = (proveedorTemp == null) ? "Proveedor Eliminado" : proveedorTemp.Nombre;
                                articulos.Costo = item.Costo;
                                articulos.Existencia = item.Existencia;
                                articulos.Existencia = item.Existencia;
                                articulos.ValorInventario = (articulos.Existencia * articulos.Costo);

                                listaTemp.Add(articulos);
                            }
                        }
                        break;

                    case "2":
                        listaTemp = new List<ArticulosConsult>();

                        foreach (var item in listaArticulos)
                        {
                            if (item.Descripcion.Contains(Criterio))
                            {
                                ArticulosConsult articulos = new ArticulosConsult();
                                articulos.ArticuloId = item.ArticuloId;
                                articulos.Descripcion = item.Descripcion;
                                articulos.Fecha = item.Fecha;
                                proveedorTemp = ProveedorBLL.Buscar(item.ProveedorId);
                                articulos.Proveedor = (proveedorTemp == null) ? "Proveedor Eliminado" : proveedorTemp.Nombre;
                                articulos.Costo = item.Costo;
                                articulos.Existencia = item.Existencia;
                                articulos.ValorInventario = (articulos.Existencia * articulos.Costo);


                                listaTemp.Add(articulos);
                            }
                        }
                        break;



                    case "3":
                        listaTemp = new List<ArticulosConsult>();
                        foreach (var item in listaArticulos)
                        {
                            proveedorTemp = ProveedorBLL.Buscar(item.ProveedorId);
                            if (proveedorTemp.Nombre.Contains(Criterio))
                            {
                                ArticulosConsult articulos = new ArticulosConsult();
                                articulos.ArticuloId = item.ArticuloId;
                                articulos.Descripcion = item.Descripcion;
                                articulos.Fecha = item.Fecha;
                                articulos.Proveedor = proveedorTemp.Nombre;
                                articulos.Costo = item.Costo;
                                articulos.Existencia = item.Existencia;
                                articulos.ValorInventario = (articulos.Existencia * articulos.Costo);


                                listaTemp.Add(articulos);
                            }
                        }
                        break;

                    case "4":
                        listaTemp = new List<ArticulosConsult>();
                        foreach (var item in listaArticulos)
                        {
                            if (Convert.ToString(item.Existencia).Contains(Criterio))
                            {
                                ArticulosConsult articulos = new ArticulosConsult();
                                articulos.ArticuloId = item.ArticuloId;
                                articulos.Descripcion = item.Descripcion;
                                articulos.Fecha = item.Fecha;
                                proveedorTemp = ProveedorBLL.Buscar(item.ProveedorId);
                                articulos.Proveedor = proveedorTemp.Nombre;
                                articulos.Costo = item.Costo;
                                articulos.Existencia = item.Existencia;
                                articulos.ValorInventario = (articulos.Existencia * articulos.Costo);


                                listaTemp.Add(articulos);
                            }
                        }
                        break;

                    case "5":
                        listaTemp = new List<ArticulosConsult>();
                        foreach (var item in listaArticulos)
                        {
                            if (Convert.ToString(item.Costo).Contains(Criterio))
                            {
                                ArticulosConsult articulos = new ArticulosConsult();
                                articulos.ArticuloId = item.ArticuloId;
                                articulos.Descripcion = item.Descripcion;
                                articulos.Fecha = item.Fecha;
                                proveedorTemp = ProveedorBLL.Buscar(item.ProveedorId);
                                articulos.Proveedor = proveedorTemp.Nombre;
                                articulos.Costo = item.Costo;
                                articulos.Existencia = item.Existencia;
                                articulos.ValorInventario = (articulos.Existencia * articulos.Costo);


                                listaTemp.Add(articulos);
                            }
                        }
                        break;
                }
                if (FiltrarFecha == true)
                {
                    ListaArticulos = new List<ArticulosConsult>();

                    foreach (var item in listaTemp)
                    {
                        if (item.Fecha.Date >= Desde.Date && item.Fecha.Date <= Hasta.Date)
                        {
                            ListaArticulos.Add(item);
                        }
                    }
                    FiltrarFecha = false;
                }
                else
                {
                    ListaArticulos = new List<ArticulosConsult>();
                    ListaArticulos = listaTemp;
                }
            }
        }
    }


}

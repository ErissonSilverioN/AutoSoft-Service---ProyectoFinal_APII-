@page "/RFacturas"
@page "/RFacturas/{FacturaId:int}"

@inject IToastService toast

@using AutosoftService.Model;
@using AutosoftService.BLL;


<EditForm Model="facturas" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">

        <div class="card-header">

            <div class="text-center">
                <h3>Registro de Factura</h3>
            </div>

        </div>

        <div class="card-body">

            <form>

                <div class="form-row">


                    <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />

                    <div class="form-group col-sm-5     col-md-5     col-lg-3     col-xl-3     ">
                        <label><b>Factura ID</b></label>
                        <div class="input-group ">
                            <InputNumber @bind-Value="@facturas.FacturaId" class="form-control" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary" @onclick="Buscar"><span class="oi oi-magnifying-glass" />&nbsp;&nbsp;Buscar</button>
                            </div>
                        </div>
                    </div>


                    <div class="col-sm-2   col-md-2   col-lg-6  col-xl-4" />

                    <div class="form-group col-sm-5     col-md-5     col-lg-3     col-xl-3     ">
                        <div class="form-group">
                            <label><b>Fecha</b></label>
                            <InputDate @bind-Value="@facturas.Fecha" class="form-control" />
                        </div>
                    </div>

                    <div class="col-sm-2   col-md-2   col-lg-0  col-xl-0" />



                    <div class="form-group col-sm-10     col-md-10     col-lg-8     col-xl-8    ">
                        <label class="text-center"><b>Descripcion del Servicio</b></label>
                        <InputText @bind-Value="facturas.Servicios" class="form-control"></InputText>
                        <ValidationMessage For="@(() => facturas.Servicios)"></ValidationMessage>
                    </div>

                    <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />

                    <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />

                    <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />


                    <div class="form-group col-sm-6     col-md-6     col-lg-4     col-xl-4     ">
                        <label><b>Cliente</b></label>
                        <InputSelect @bind-Value="@ClienteSelect" class="form-control" @onclick="LlenaComboxCliente" @onchange="LlenaComboxCliente">
                            <option value="0" disabled selected>---Seleccione un Cliente---</option>
                            @if (ListaCliente.Count == 0)
                            {
                                <option value="" disabled>No hay Cliente Registrado</option>
                            }
                            else
                            {
                                @foreach (var item in ListaCliente)
                                {
                                    <option value="@item.ClienteId">@item.Nombre</option>
                                }
                            }
                        </InputSelect>
                    </div>


                    <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />

                    <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />


                    <div class="form-group col-sm-6     col-md-6     col-lg-4     col-xl-4     ">
                        <label><b>Vehiculo</b></label>
                        <InputSelect @bind-Value="@VehiculosSelect" class="form-control" @onclick="LlenaComboxVehiculo" @onchange="LlenaComboxVehiculo">
                            <option value="0" disabled selected>---Seleccione un Vehiculo---</option>
                            @if (ListaVehiculos.Count == 0)
                            {
                                <option value="" disabled>No hay Vehiculo Registrado</option>
                            }
                            else
                            {
                                @foreach (var item in ListaVehiculos)
                                {
                                    <option value="@item.VehiculoId">@item.Descripcion</option>
                                }
                            }
                        </InputSelect>
                    </div>


                    <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />

                    <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />

                    <br />


                    <div class="form-group col-sm-6     col-md-6     col-lg-4     col-xl-3     ">
                        <label><b>Articulo</b></label>
                        <InputSelect @bind-Value="@ArticuloSelect" class="form-control" @onclick="LlenaComboxArticulo" @onchange="LlenaComboxArticulo">
                            <option value="0" disabled selected>---Seleccione un Articulo---</option>
                            @if (ListaVehiculos.Count == 0)
                            {
                                <option value="" disabled>No hay Articulo Registrado</option>
                            }
                            else
                            {
                                @foreach (var item in ListaArticulo)
                                {
                                    <option value="@item.ArticuloId">@item.Descripcion</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="@(()=>facturas.ArticuloId)" />
                    </div>

                    <div class="form-group col-sm-4     col-md-4     col-lg-2    col-xl-2     ">
                        <label><b>Cantidad</b></label>
                        <InputNumber @bind-Value="@cantidad" class="form-control" @onfocusin="CalcularImporte" @onfocusout="CalcularImporte" @onclick="CalcularImporte" />
                    </div>


                    <div class="col-sm-0     col-md-0     col-lg-0     col-xl-0" />


                    <div class="form-row col-md-12 col-lg-6">

                        <div class="form-group col-sm-6     col-md-6     col-lg-4    col-xl-4     ">
                            <label><b>Precio</b></label>
                            <InputNumber @bind-Value="@precio" class="form-control" Readonly="true"></InputNumber>
                        </div>

                        <div class="form-group col-sm-6     col-md-6     col-lg-4    col-xl-4    ">
                            <label><b>Importe</b></label>
                            <div class="input-group ">
                                <InputNumber @bind-Value="@importe" class="form-control " Readonly="true" @onfocusin="CalcularImporte" @onfocusout="CalcularImporte" @onclick="CalcularImporte" />
                                <div class="form-group col-sm-12     col-md-2    ">
                                    <button type="button" class="btn btn-info" @onclick="Agregar">Agregar</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-0     col-xl-1" />



                    <div class="col-lg-12       col-xl-10 no-gutters ">

                        <div class="card">
                            <div class="card-body">
                                <table class="table">
                                    <thead class="thead-light">
                                        <tr>
                                            <th>ID</th>
                                            <th>Articulo</th>
                                            <th>Cantidad</th>
                                            <th>Precio</th>
                                            <th>Importe</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in facturas.Factura_Detalle)
                                        {
                                            <tr>
                                                <th>@item.ArticuloId</th>
                                                <th>@item.Descripcion</th>
                                                <th>@item.Cantidad</th>
                                                <th>@item.Precio.ToString("N2")</th>
                                                <th>@item.Importe.ToString("N2")</th>
                                                <th><button type="button" class="btn btn-outline-danger btn-sm" @onclick="(()=> Remover(item))">Eliminar</button></th>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <div class="form-inline justify-content-end">
                                    <label><b>SUBTOTAL:</b>&nbsp;</label>
                                    <InputNumber @bind-Value="@facturas.SubTotal" class="form-control" Readonly="true" />
                                </div>

                                <div class="form-inline justify-content-end">
                                    <label><b>ITBIS:</b>:&nbsp;</label>
                                    <InputNumber @bind-Value="@facturas.Itbis" class="form-control" Readonly="true" />
                                </div>

                                <div class="form-inline justify-content-end">
                                    <label><b>TOTAL:</b>:&nbsp;</label>
                                    <InputNumber @bind-Value="@facturas.Total" class="form-control" Readonly="true" />
                                </div>


                                <div class="form-check justify-content-start">
                                    <label class="form-check-label">&nbsp;&nbsp;<b>Facturar a credito</b></label>
                                    <input class="form-check-inline" type="checkbox" @bind-value="facturas.FacturaCredito">
                                </div>

                            </div>
                        </div>

                        <br />

                    </div>

                    <br />

                    <div class="col-sm-2   col-md-2   col-lg-0  col-xl-0" />

                    <div class="form-group col-sm-10     col-md-10     col-lg-8     col-xl-8    ">
                        <label><b>Proximo Mantenimiento</b></label>
                        <InputDate @bind-Value="facturas.ProximoMantemiento" class="form-control"></InputDate>
                        <ValidationMessage For="@(() => facturas.ProximoMantemiento)"></ValidationMessage>
                    </div>



                </div>

            </form>

        </div>


        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><i class="fa fa-plus"></i> Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success"><i class="fa fa-save"></i> Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><i class="fa fa-trash"></i> Eliminar</button>
            </div>
        </div>

    </div>



</EditForm>


@code {

    [Parameter]
    public int FacturaId { get; set; }
    private Facturas facturas = new Facturas();


    private Articulos articulos { get; set; }
    private List<Articulos> ListaArticulo = new List<Articulos>();
    private string ArticuloSelect { get; set; }


    Clientes clientes { get; set; }
    private List<Clientes> ListaCliente = new List<Clientes>();
    private string ClienteSelect { get; set; }

    Vehiculos vehiculos { get; set; }
    private List<Vehiculos> ListaVehiculos = new List<Vehiculos>();
    private string VehiculosSelect { get; set; }


    private int cantidad = 0, importe = 0;
    private decimal precio = 0;








    protected override void OnInitialized()
    {

        ListaCliente = BLL.ClienteBLL.GetList(e => true);
        ListaVehiculos = BLL.VehiculoBLL.GetList(e => true);
        ListaArticulo = ArticuloBLL.GetList(e => true);
        facturas = new Facturas();
        clientes = new Clientes();
        articulos = new Articulos();
        vehiculos = new Vehiculos();

        Nuevo();
        base.OnInitialized();
    }


    private void Buscar()
    {

        var facturasTemp = FacturaBLL.Buscar(facturas.FacturaId);

        if (facturasTemp != null)
        {
            Nuevo();
            facturas = facturasTemp;
            ClienteSelect = facturas.FacturaId.ToString();
            VehiculosSelect = facturas.FacturaId.ToString();
            

        }

        else

        {
            facturas = new Facturas();
            toast.ShowError("Factura no encontrada", "Fallo");
        }

    }




    private void Nuevo()
    {
        this.facturas = new Facturas();
        ClienteSelect = "0";
        VehiculosSelect = "0";
        ArticuloSelect = "0";
        precio = 0;
        cantidad = 0;
        importe = 0;
    }




    private void Guardar()
    {

        CalcularImporte();

        if (ClienteSelect == null && VehiculosSelect == null)
        {
            toast.ShowInfo("Seleccione un Cliente", "Info");
        }
        else
        {
            facturas.ClienteId = Convert.ToInt32(ClienteSelect);
            facturas.VehiculoId = Convert.ToInt32(VehiculosSelect);

            if (facturas.Factura_Detalle.Count == 0)
            {
                toast.ShowInfo("Debes agregar un Articulo", "Info");
            }
            else
            {
                if (FacturaBLL.Guardar(facturas))
                {
                    Nuevo();
                    toast.ShowSuccess("Factura Guardada", "Exito");
                }
                else
                {
                    toast.ShowError("Error al guardar Factura", "Fallo");
                }
            }
        }
    }


    private void Eliminar()
    {
        bool paso;

        paso = FacturaBLL.Eliminar(facturas.FacturaId);

        if (paso)
        {
            Nuevo();
            toast.ShowWarning("Factura eliminada", "Exito");
        }
        else
        {
            toast.ShowError("No se pudo eliminar","Fallo");
        }
    }

    private void Agregar()
    {
        var articuloTemp = ArticuloBLL.Buscar(Convert.ToInt32(ArticuloSelect));

        if (ArticuloSelect == null)
        {
            toast.ShowInfo("Ingrese un Articulo", "Info");
        }
        else
        {

            if (cantidad <= 0)
            {
                toast.ShowInfo("Ingrese una cantidad", "Info");
            }
            else

               if (cantidad >= 999999)
            {
                toast.ShowInfo("La cantidad ingresa no es valida", "Info");
                return;
            }
            else
            {
                if (articuloTemp.Existencia == 0)
                {
                    toast.ShowInfo("No hay articulos en existencia", "Info");
                }
                else
                {




                    facturas.Factura_Detalle.Add(new FacturaD()
                    {
                        FacturaId = facturas.FacturaId,
                        ArticuloId = facturas.ArticuloId,
                        Descripcion = articuloTemp.Descripcion,
                        Cantidad = cantidad,
                        Precio = precio,
                        Importe = (cantidad * precio)

                    }); ;

                    articulos = new Articulos();

                    Calculos();
                    precio = 0;
                    ArticuloSelect = "0";
                    cantidad = 0;
                }
            }

        }
    }


    private void Remover(FacturaD Detalle)
    {
        facturas.Factura_Detalle.Remove(Detalle);
        Calculos();
    }


    private void LlenaComboxCliente()
    {

        try
        {
            facturas.ClienteId = Convert.ToInt32(ClienteSelect);
        }
        catch (Exception)
        {
            toast.ShowError("Algo salio mal", "Error");
        }


    }


    private void LlenaComboxVehiculo()
    {
        try
        {
            facturas.VehiculoId = Convert.ToInt32(VehiculosSelect);
        }
        catch (Exception)
        {
            toast.ShowError("Algo salio mal", "Error");
        }
    }



    private void LlenaComboxArticulo()
    {

        try
        {
            facturas.ArticuloId  = Convert.ToInt32(ArticuloSelect);

            var articuloTemp = ArticuloBLL.Buscar(Convert.ToInt32(ArticuloSelect));

            if (articuloTemp != null)
            {
                precio = Convert.ToDecimal(articuloTemp.Precio.ToString("N2"));
            }

        }
        catch (Exception)
        {
            toast.ShowError("Algo salio mal", "Error");
        }


    }


    private void CalcularImporte()
    {
        if (facturas != null)
        {
            importe = Convert.ToInt32(precio) * cantidad;
        }
        else
        {
            toast.ShowError("Error al Calcular", "Fallo");
        }
    }


    private void Calculos()
    {

        decimal subtotal = 0;
        decimal itbis = 0;
        decimal total = 0;


        foreach (var item in facturas.Factura_Detalle)
        {
            subtotal += item.Importe;
            itbis += subtotal * (decimal)0.18;
            total += item.Importe + Convert.ToDecimal(itbis);
        }

        facturas.SubTotal = Convert.ToDecimal(subtotal.ToString("N2"));
        facturas.Itbis = Convert.ToDecimal(itbis.ToString("N2"));
        facturas.Total = Convert.ToDecimal(total.ToString("N2"));



    }

}

#pragma checksum "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\Pages\Registros\RFacturas.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a687358b2790c8e7c47aaa8f53907b620e92a03e"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace AutosoftService.Pages.Registros
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using AutosoftService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using AutosoftService.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\Pages\Registros\RFacturas.razor"
using AutosoftService.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\Pages\Registros\RFacturas.razor"
using AutosoftService.BLL;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/RFacturas")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/RFacturas/{FacturaId:int}")]
    public partial class RFacturas : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 260 "C:\Users\PANDA\Source\Repos\AutosoftService-ProyectoFinal3\AutosoftService\Pages\Registros\RFacturas.razor"
       

    [Parameter]
    public int FacturaId { get; set; }
    private Facturas facturas = new Facturas();


    private Articulos articulos { get; set; }
    private List<Articulos> ListaArticulo = new List<Articulos>();
    private string ArticuloSelect { get; set; }


    Clientes clientes { get; set; }
    private List<Clientes> ListaCliente = new List<Clientes>();
    private string ClienteSelect { get; set; }

    Vehiculos vehiculos { get; set; }
    private List<Vehiculos> ListaVehiculos = new List<Vehiculos>();
    private string VehiculosSelect { get; set; }


    private int cantidad = 0, importe = 0;
    private decimal precio = 0;
   







    protected override void OnInitialized()
    {

        ListaCliente = BLL.ClienteBLL.GetList(e => true);
        ListaVehiculos = BLL.VehiculoBLL.GetList(e => true);
        ListaArticulo = ArticuloBLL.GetList(e => true);
        facturas = new Facturas();
        clientes = new Clientes();
        articulos = new Articulos();
        vehiculos = new Vehiculos();

        Nuevo();
        base.OnInitialized();
    }


    private void Buscar()
    {

        var facturasTemp = FacturaBLL.Buscar(facturas.FacturaId);

        if (facturasTemp != null)
        {
            Nuevo();
            facturas = facturasTemp;

        }

        else

        {
            facturas = new Facturas();
            toast.ShowError("Factura no encontrada", "Fallo");
        }

    }




    private void Nuevo()
    {
        this.facturas = new Facturas();
        ClienteSelect = "0";
        VehiculosSelect = "0";
        ArticuloSelect = "0";
        precio = 0;
        cantidad = 0;
        importe = 0;
    }




    private void Guardar()
    {

        CalcularImporte();
        if (ClienteSelect == null && VehiculosSelect == null)
        {
            toast.ShowInfo("Seleccione un Cliente", "Info");
        }
        else
        {
            facturas.ClienteId = Convert.ToInt32(ClienteSelect);
            facturas.VehiculoId = Convert.ToInt32(VehiculosSelect);

            if (facturas.Factura_Detalle.Count == 0)
            {
                toast.ShowInfo("Debes agregar un Articulo", "Info");
            }
            else
            {
                if (FacturaBLL.Guardar(facturas))
                {
                    Nuevo();
                    toast.ShowSuccess("Factura Guardada", "Exito");
                }
                else
                {
                    toast.ShowError("Error al guardar Factura", "Fallo");
                }
            }
        }
    }


    private void Eliminar()
    {
        bool paso;

        paso = FacturaBLL.Eliminar(facturas.FacturaId);

        if (paso)
        {
            Nuevo();
            toast.ShowWarning("Factura eliminada", "Exito");
        }
        else
        {
            toast.ShowError("No se pudo eliminar","Fallo");
        }
    }

    private void Agregar()
    {
        var articuloTemp = ArticuloBLL.Buscar(Convert.ToInt32(ArticuloSelect));

        if (ArticuloSelect == null)
        {
            toast.ShowInfo("Ingrese un Articulo", "Info");
        }
        else
        {

            if (cantidad <= 0)
            {
                toast.ShowInfo("Ingrese una cantidad", "Info");
            }
            else

               if (cantidad >= 999999)
            {
                toast.ShowInfo("La cantidad ingresa no es valida", "Info");
                return;
            }
            else
            {
                if (articuloTemp.Existencia == 0)
                {
                    toast.ShowInfo("No hay articulos en existencia", "Info");
                }
                else
                {




                    facturas.Factura_Detalle.Add(new FacturaD()
                    {
                        FacturaId = facturas.FacturaId,
                        ArticuloId = facturas.ArticuloId,
                        Descripcion = articuloTemp.Descripcion,
                        Cantidad = cantidad,
                        Precio = precio,
                        Importe = (cantidad * precio)

                    });

                    articulos = new Articulos();

                    Calculos();


                    cantidad = 0;
                }
            }

        }
    }


    private void Remover(FacturaD Detalle)
    {
        facturas.Factura_Detalle.Remove(Detalle);
        Calculos();
    }


    private void LlenaComboxCliente()
    {

        try
        {
            facturas.ClienteId = Convert.ToInt32(ClienteSelect);
        }
        catch (Exception)
        {
            toast.ShowError("Algo salio mal", "Error");
        }


    }


    private void LlenaComboxVehiculo()
    {
        try
        {
            facturas.VehiculoId = Convert.ToInt32(VehiculosSelect);
        }
        catch (Exception)
        {
            toast.ShowError("Algo salio mal", "Error");
        }
    }



    private void LlenaComboxArticulo()
    {

        try
        {
            facturas.ArticuloId  = Convert.ToInt32(ArticuloSelect);

            var articuloTemp = ArticuloBLL.Buscar(Convert.ToInt32(ArticuloSelect));

            if (articuloTemp != null)
            {
                precio = articuloTemp.Precio;
            }

        }
        catch (Exception)
        {
            toast.ShowError("Algo salio mal", "Error");
        }


    }


    private void CalcularImporte()
    {
        if (facturas != null)
        {
            importe = Convert.ToInt32(precio) * cantidad;
        }
        else
        {
            toast.ShowError("Error al Calcular", "Fallo");
        }
    }


    private void Calculos()
    {

        decimal subtotal = 0;
        decimal itbis = 0;
        decimal total = 0;


        foreach (var item in facturas.Factura_Detalle)
        {
            subtotal += item.Importe;
            itbis += subtotal * (decimal)0.18;
            total += item.Importe + Convert.ToDecimal(itbis);
        }

        facturas.SubTotal = subtotal;
        facturas.Itbis = itbis;
        facturas.Total = total;



    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toast { get; set; }
    }
}
#pragma warning restore 1591
